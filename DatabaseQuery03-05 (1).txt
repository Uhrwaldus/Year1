USE master;

if DB_ID('FerrariDB') IS NOT NULL
	DROP DATABASE FerrariDB;

CREATE DATABASE FerrariDB;
GO

USE FerrariDB;

--s√¶lgertabellen--

CREATE TABLE [salesman] (
	[salesman_ID] int IDENTITY(1, 1),
	[firstname] nVarChar(25),
	[lastname] nVarChar(25),
	[reviewCode] int

	PRIMARY KEY (salesman_ID)
	);

--kundetabellen--

CREATE TABLE [customer] (
	[customer_ID] int IDENTITY,
	[firstname] nVarChar(25),
	[lastname] nVarChar(25),
	[email] nVarChar(50),
	[phonenumber] int,
	[adress] nVarChar(50),
	[city] nVarChar(25),
	[postcode] int,
	[CPR] nVarChar(10)

	PRIMARY KEY (customer_ID)
	);


--biltabellen--

CREATE TABLE [car] (
	[car_ID] int IDENTITY,
	[car_name] nVarChar(25),
	[car_price] int,
	[stock] int

	PRIMARY KEY (car_ID)
	);

INSERT INTO [car] VALUES ('Ferrari F40', '3500000', '3')
INSERT INTO [car] VALUES ('Ferrari Spyder', '2800000', '7')


--tilbudstabellen--
CREATE TABLE [offer] (
	[offer_ID] int IDENTITY(1, 1),
	[date] datetime,
	[interest] int,
	[credit_rating] varchar,
	[loan_total] int,
	[deposit] int,
	[duration] int,
	[customer_ID] int FOREIGN KEY REFERENCES [customer](customer_ID),
	[salesman_ID]  int FOREIGN KEY REFERENCES [salesman](salesman_ID),
	[car_ID] int FOREIGN KEY REFERENCES	[car](car_ID)

	PRIMARY KEY	(offer_ID)
	);

--bridging table mellem offer og car--
CREATE TABLE [car_offer] (
	[offer_ID] int FOREIGN KEY REFERENCES [offer](offer_ID),
	[car_ID] int FOREIGN KEY REFERENCES [car](car_ID)
	);